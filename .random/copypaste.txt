
\BaseDirectory{C:/texlive/texmf-local}
\DeclareDir{tex/latex/base}{texinput/latex2e}
\DeclareDir{tex/latex/tools}{texinput/tools}
\DeclareDir{makeindex}{idxstyle}

%     ifstar ->{{{[grow down sep, branch right sep, fresh nodes,
%                    left anchor = south west, right anchor = north west] 
%              no star }-> 
%                 {{[grow left sep, branch down sep, fresh nodes,
%                    left anchor = south west, right anchor = north west] ifoption -> 
%                      yes option -> assign option} -> 
%                       ifexponent -> {{[grow left sep, branch down sep, fresh nodes,
%                    left anchor = south west, right anchor = north west]
%                                      yes exponent -> assign exponent}, 
%                                       no exponent}, 
%                              no option -> 
%                       ifexponent -> {{[grow left sep, branch down sep, fresh nodes,
%                    left anchor = south west, right anchor = north west]
%                                      yes exponent -> assign exponent}, 
%                                       no exponent} -> function} -> function},
%               {{[grow down sep, branch left sep, fresh nodes, 
%                   left anchor = south east, right anchor = north east]
%             yes star} -> 
%                 {{[grow right sep, branch down sep, fresh nodes,
%                    left anchor = south west, right anchor = north west] ifoption -> 
%                      yes option -> assign option} -> 
%                       ifexponent -> {{[grow right sep, branch down sep, fresh nodes,
%                    left anchor = south west, right anchor = north west]
%                                      yes exponent -> assign exponent}, 
%                                       no exponent}, 
%                              no option -> 
%                       ifexponent -> {{[grow right sep, branch down sep, fresh nodes,
%                    left anchor = south west, right anchor = north west]
%                                      yes exponent -> assign exponent}, 
%                                       no exponent}}},  
%                           }


% \begin{center}
% \begin{tikzpicture}[every node/.style = {draw,text height=1.5ex, text depth=0.5ex},
%   line width = 1.2pt]
%   \graph{
%   {[fresh nodes, grow down sep, branch right sep]
%     function call ->
%         Check for star -!- 
%               {no star,
%                   star} ->
%         Check for option -!-
%               {no option, 
%                   {option -> assign option}} ->
%         Check for exponent -!- 
%               {no exponent -!- {[branch left sep, grow down sep] 
%                   take function}, 
%                   exponent -> assign exponent} -!- final},
%   take function ->[bend right] final,
%   no star ->[left anchor = south west, bend right] take function,
%   Check for option ->[left anchor = east, right anchor = north east,bend left] option,
%   Check for option ->[left anchor = west, right anchor = north west,bend right] no option,
%   Check for exponent ->[left anchor = east, right anchor = north east,bend left] exponent,
%   Check for exponent ->[left anchor = west, right anchor = north west,bend right] no exponent,
%   Check for star ->[left anchor = east, right anchor = north east,bend left] star,
%   Check for star ->[left anchor = west, right anchor = north west,bend right] no star,
%   no exponent -> final, 
%   assign exponent ->[bend left, left anchor = south west] final,
%   };
% \end{tikzpicture}
% \end{center}



% \begin{center}
% \tikz[every node/.style={text height=1.5ex, text depth=0.5ex}, line width = 0.9pt] 
% \graph[grow right sep]{{[fresh nodes]\string\let\space token1 <-> token2 -!- token3,
%                       \string\futurelet\space token1 -!- token2 -!- token3},
%                       \string\futurelet\space token1 <->[left anchor = south east, bend right] token3'};
% \end{center}



%\ode a(x)      && \ode[x]{b(x)} && \ode^1 c(x)     && \ode[x]^5 {d(x)} \\
%\ode* {e(x)}   && \ode*[x] f(x) && \ode*^2 {g(x)}  && \ode*[x]^6h(x) \\
%\pde[t] i(x)   && \pde[x] {j(x)}&& \pde[t]^3k(x)   && \pde[x]^7 {l(x)} \\
%\pde*[t] {m(x)}&& \pde*[x]n(x)  && \pde*[t]^4 o(x) && \pde*[x]^8 p(x)


% Principly the same as \cs{@deifnextch@r}, just inverting what's important, 
% forming a three point cycle until the first space token is found.
%    \begin{macrocode}
\def\@deifnotsp@ce{%
    \futurelet\@detesttoken\@det@ksgobbler}
\def\@det@ksgobbler{%
    \ifx\@detesttoken\@sptoken\relax%
        \expandafter\@de@if@tpos\else%
        \expandafter\@deuntilsp@ce\fi}
%    \end{macrocode}
% ^^A There are a couple points 
%